# The ``7-base_geometry.py`` module
# ============================================
# How to use 7-base_geometry.py
# ============================================

This module has a function ``integer_validator()`` that validates an integer

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Test if area is not implemented.
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

passing a non-integer argument.
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", "st")
Traceback (most recent call last):
TypeError: name must be an integer

passing a negative value.
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", -10)
Traceback (most recent call last):
ValueError: name must be greater than 0

Test for a 0 value.
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
ValueError: name must be greater than 0

a positive value.
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 5)

one argument to integer_validator.
>>> bg = BaseGeometry()
>>> bg.integer_validator("name")
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

more than two arguments to integer_validator.
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 12, 13)
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() takes 3 positional arguments but 4 were given

no arguments to integer_validator.
>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

a boolean value.
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", True)

>>> bg = BaseGeometry()
>>> bg.integer_validator("name", False)
Traceback (most recent call last):
ValueError: name must be greater than 0
