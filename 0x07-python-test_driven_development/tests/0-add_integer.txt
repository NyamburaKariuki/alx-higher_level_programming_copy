#0-add_integer module

#How to use 0-add_integer.py

''add_integer()'' function returns the sum of two arguments, a and b. b is optionl or by default 98

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(4, 8)
    12

    Adding a negative and non-negative number
    >>> add_integer(2, -7)
    -5

Adding 2 floats
    >>> add_integer(4.0, 3.0)
    7

Adding an integer and a bool
    >>> add_integer(3, True)
    4

Adding negative floata
    >>> add_integer(-3.9, -0.4)
    -3

Adding a float and a number
    >>> add_integer(1.3, -5)
    -4

Passing one argument
    >>> add_integer(1)
    99

Non-Numbers
===========

add_integer() does not take non numbers, if the user tries, it throws an TypeError

Add a string and an integer
    >>> add_integer('p', 3)
    Traceback (most recent call last):
    TypeError: a must be an integer


    >>> add_integer(5.0, 'p')
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

Passing infinity as an argument
    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
     
Passing a NaN as an argument
    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(7, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
